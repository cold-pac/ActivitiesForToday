{"version":3,"sources":["App.js","index.js"],"names":["ideasCopy","IdeaDisplay","props","randomPicks","length","className","id","items","onClick","pickTwoActivities","App","state","page1","ideas","newInput","submit","handleSubmit","bind","handleActivityChange","changeTabs","event","preventDefault","this","setState","window","alert","target","value","slice","console","log","splice","Math","floor","random","randomPicksCopy","map","elem","index","indexOf","key","onSubmit","onChange","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30160e57.chunk.js","sourcesContent":["import React from 'react';\n\n\nlet AddIdeas = (props) => {\n  return (\n    <>\n      <div>Add Some Activities to Do Today!</div>\n      \n      <form onSubmit = {props.addActivity}>\n        <input value={props.newActivity} onChange={props.handleActivityChange} /> \n        <button type = \"submit\">Add</button>\n      </form>\n\n\n    </>\n  ); \n}\n\nlet IdeaDisplay = (props) => {\n  \n  if (props.randomPicks.length != 0) {\n    return (\n      <>\n        <div className = \"description\">We currently have <span id = \"special\">{props.items.length}</span> idea(s) for what to do today!</div>\n        <div id = \"listContainer\">\n            <ul>\n                {props.items}\n            </ul>\n          </div>\n          <div id = \"buttonContainer\"><button onClick = {props.pickTwoActivities}>Pick two ideas randomly</button></div>\n          <div id = \"ourIdeas\">\n              Today's activities: {props.randomPicks[0]}, {props.randomPicks[1]}\n          </div>\n      </> \n    );      \n  } else {\n    return (\n      <>\n        <div className = \"description\">We currently have <span id = \"special\">{props.items.length}</span> idea(s) for what to do today!</div>\n          <div id = \"listContainer\">\n            <ul>\n                {props.items}\n            </ul>\n          </div>\n          <div id = \"buttonContainer\"><button onClick = {props.pickTwoActivities}>Pick two ideas randomly</button></div>\n          <div id = \"ourIdeas\">\n             Today's activities will go here!\n          </div>\n      </> \n    ); \n  }\n  \n}\n\nlet ideasCopy; \n\nclass App extends React.Component {\n  constructor (props) {\n    super(props); \n    \n    this.state = {\n      page1: true, \n      ideas: [], \n      randomPicks: [], \n      newInput: '',\n      submit: '', \n\n    }; \n\n    this.handleSubmit = this.handleSubmit.bind(this); \n    this.handleActivityChange = this.handleActivityChange.bind(this); \n    this.changeTabs = this.changeTabs.bind(this); \n    this.pickTwoActivities = this.pickTwoActivities.bind(this);\n\n  }\n\n  handleSubmit (event) {\n    event.preventDefault();\n    if (this.state.newInput != '') {\n      this.setState(function (state) {\n        return {ideas: [...state.ideas, state.newInput], newInput: ''}\n        });\n    } else {\n      window.alert(\"You have to type an activity into the input bar before you add it!\");\n    }\n    \n  }\n\n  handleActivityChange (event) {\n    this.setState({\n      newInput: event.target.value,\n      });\n  }\n\n  changeTabs () {\n    if (this.state.page1) {\n      this.setState({page1: false}); \n    } else {\n      this.setState({page1: true}); \n    }\n  }\n\n  pickTwoActivities () {\n    if (this.state.ideas.length > 2) {\n\n      ideasCopy = this.state.ideas.slice(0); \n\n      console.log(ideasCopy); \n\n      this.setState({randomPicks: [(ideasCopy.splice( Math.floor(Math.random() * this.state.ideas.length), 1) [0]), (ideasCopy.splice( Math.floor(Math.random() * (this.state.ideas.length - 1) ), 1) [0])]}); \n\n      console.log(this.state.randomPicks); \n\n    } else {\n      window.alert(\"You need at least 3 ideas before you can pick 2 randomly!\");\n    }\n  }\n\n  render () {\n   // const items = this.state.ideas.map((elem, index) => <li key = {index}>{elem}</li>); \n\n    let randomPicksCopy = this.state.randomPicks.slice(0); \n    \n    const items = this.state.ideas.map(function (elem, index) {\n      \n      if (randomPicksCopy.indexOf(elem) != -1) {\n        return <li className = \"selectedLi\" key = {index}>{elem}</li>;\n      } else {\n        return <li key = {index}>{elem}</li>; \n      }\n\n    });\n\n    if (this.state.page1) {\n      \n      return (\n        <div>\n            <div className = \"header\"><span className = \"headerItem\">Add Activities</span><span className = \"headerItem\" onClick = {this.changeTabs}>Randomly Pick Activities</span></div>\n            <div className = \"description\">Add new activities!</div> \n            <div id = \"listContainer\">\n              <ul>\n                {items}\n              </ul>\n            </div>\n            <form onSubmit = {this.handleSubmit}>\n              <input value = {this.state.newInput} onChange={this.handleActivityChange} /> \n              <button type = \"submit\">Add</button>\n            </form>\n        </div>\n      );\n\n    } else {\n\n      return (\n        <div>\n          <div className = \"header\"><span className = \"headerItem\" onClick = {this.changeTabs}>Add Activities</span><span className = \"headerItem\">Randomly Pick Activities</span></div>\n          <IdeaDisplay items = {items} randomPicks = {this.state.randomPicks} pickTwoActivities = {this.pickTwoActivities}/> \n        </div>\n      ); \n\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}